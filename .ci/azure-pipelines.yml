strategy:
  matrix:
    linux:
      imageName: "ubuntu-16.04"
    mac:
      imageName: "macos-10.14"
    windows:
      imageName: "windows-2019"
  maxParallel: 3

pool:
  vmImage: $(imageName)
 
steps:
# Linux
- bash: |
    sudo apt-get install -y libzmq5-dev ninja-build
  condition: eq( variables['Agent.OS'], 'Linux' )
  displayName: Linux - Install ZeroMQ and Ninja
# macOS
- bash: |
    brew install zeromq ninja boost
  condition: eq( variables['Agent.OS'], 'Darwin' )
  displayName: macOS - Install Boost, ZeroMQ, and Ninja
# Windows
- powershell: |
    choco install ninja
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  displayName: Windows - Install Ninja

- bash: |
    cmake --version
    git clone https://github.com/GMLC-TDC/HELICS-src
    cd HELICS-src
    git checkout zmq_subproject
    git submodule update --init --recursive
  displayName: Checkout HELICS
# Linux, macOS
- bash: |
    cd HELICS-src
    mkdir build
    cd build
    cmake -GNinja -DBUILD_HELICS_TESTS=OFF -DBUILD_HELICS_EXAMPLES=OFF ../
    sudo cmake --build . --target install
  condition: ne( variables['Agent.OS'], 'Windows_NT' )
  displayName: Linux/macOS - Install HELICS
# Windows
- script: |
    call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
    cd HELICS-src
    mkdir build
    cd build
    cmake -GNinja -DCMAKE_C_COMPILER="cl.exe" -DCMAKE_CXX_COMPILER="cl.exe" -DBUILD_HELICS_TESTS=OFF -DBUILD_HELICS_EXAMPLES=OFF ../
    cmake --build . --target install
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  displayName: Windows - Install HELICS
